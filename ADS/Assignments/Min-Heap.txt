class MinHeap {
    void heapify(int arr[], int n, int i) {
        int smallest = i; 
        int l = 2 * i + 1; 
        int r = 2 * i + 2; 

        
        if (l < n && arr[l] < arr[smallest]) {
            smallest = l;
        }

        
        if (r < n && arr[r] < arr[smallest]) {
            smallest = r;
        }

        
        if (smallest != i) {
            int temp = arr[i];
            arr[i] = arr[smallest];
            arr[smallest] = temp;

            heapify(arr, n, smallest);
        }
    }


    void buildMinHeap(int arr[]) {
        int n = arr.length;
        
        for (int i = n / 2 - 1; i >= 0; i--) {
            heapify(arr, n, i);
        }
    }

    void display(int arr[]) {
        for (int i = 0; i < arr.length; i++) {
            System.out.print(arr[i] + " ");
        }
        System.out.println();
    }

    public static void main(String args[]) {
        MinHeap minHeap = new MinHeap();
        int arr[] = {99, 66, 77, 44, 33, 88, 11};
        
        System.out.println("Original array:");
        minHeap.display(arr);
        
        minHeap.buildMinHeap(arr);
        System.out.println("Min-Heap:");
        minHeap.display(arr);
    }
}
